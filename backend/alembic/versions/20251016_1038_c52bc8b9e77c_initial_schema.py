"""initial_schema

Revision ID: c52bc8b9e77c
Revises: 
Create Date: 2025-10-16 10:38:59.788250

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision: str = 'c52bc8b9e77c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id_hash', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id_hash')
    )
    op.create_table('knowledge_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chunk_hash', sa.String(length=64), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', Vector(768), nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('source_url', sa.String(length=2048), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chunk_hash')
    )
    op.create_index('idx_knowledge_sources_embedding', 'knowledge_sources', [sa.text('embedding vector_cosine_ops')], unique=False, postgresql_using='hnsw')
    op.create_index('idx_knowledge_sources_metadata', 'knowledge_sources', ['metadata'], unique=False, postgresql_using='gin')
    op.create_index('idx_knowledge_sources_type', 'knowledge_sources', ['source_type'], unique=False)
    op.create_table('law_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chunk_hash', sa.String(length=64), nullable=False),
    sa.Column('law_name', sa.Text(), nullable=False),
    sa.Column('full_reference', sa.Text(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', Vector(768), nullable=True),
    sa.Column('source_url', sa.String(length=2048), nullable=True),
    sa.Column('source_file', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chunk_hash')
    )
    op.create_index('idx_law_sources_embedding', 'law_sources', [sa.text('embedding vector_cosine_ops')], unique=False, postgresql_using='hnsw')
    op.create_index('idx_law_sources_law_ref', 'law_sources', ['law_name', 'full_reference'], unique=False)
    op.create_table('tax_rule_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('effective_from', sa.DateTime(), nullable=False),
    sa.Column('effective_to', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('sessions',
    sa.Column('id', sa.Text(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('client_id_hash', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id_hash'], ['clients.client_id_hash'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sessions_client_created', 'sessions', ['client_id_hash', 'created_at'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Text(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('session_id', sa.Text(), nullable=False),
    sa.Column('role', sa.String(length=16), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("role IN ('user', 'assistant')", name='check_role'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_messages_session_created', 'messages', ['session_id', 'created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_messages_session_created', table_name='messages')
    op.drop_table('messages')
    op.drop_index('idx_sessions_client_created', table_name='sessions')
    op.drop_table('sessions')
    op.drop_table('tax_rule_config')
    op.drop_index('idx_law_sources_law_ref', table_name='law_sources')
    op.drop_index('idx_law_sources_embedding', table_name='law_sources', postgresql_using='hnsw')
    op.drop_table('law_sources')
    op.drop_index('idx_knowledge_sources_type', table_name='knowledge_sources')
    op.drop_index('idx_knowledge_sources_metadata', table_name='knowledge_sources', postgresql_using='gin')
    op.drop_index('idx_knowledge_sources_embedding', table_name='knowledge_sources', postgresql_using='hnsw')
    op.drop_table('knowledge_sources')
    op.drop_table('clients')
    # ### end Alembic commands ###
